{"version":3,"sources":["../index.ts","../../@interactjs/utils/isWindow.ts","../../@interactjs/utils/window.ts","../../@interactjs/utils/is.ts","../../@interactjs/actions/drag/plugin.ts","../../@interactjs/utils/domObjects.ts","../../@interactjs/utils/browser.ts","../../@interactjs/utils/domUtils.ts","../../@interactjs/utils/extend.ts","../../@interactjs/utils/rect.ts","../../@interactjs/utils/getOriginXY.ts","../../@interactjs/utils/normalizeListeners.ts","../../@interactjs/utils/hypot.ts","../../@interactjs/utils/pointerExtend.ts","../../@interactjs/utils/pointerUtils.ts","../../@interactjs/core/BaseEvent.ts","../../@interactjs/utils/arr.ts","../../@interactjs/actions/drop/DropEvent.ts","../../@interactjs/actions/drop/plugin.ts","../../@interactjs/actions/gesture/plugin.ts","../../@interactjs/actions/resize/plugin.ts","../../@interactjs/utils/raf.ts","../../@interactjs/actions/plugin.ts","../../@interactjs/auto-scroll/plugin.ts","../../@interactjs/utils/misc.ts","../../@interactjs/auto-start/InteractableMethods.ts","../../@interactjs/auto-start/base.ts","../../@interactjs/auto-start/dragAxis.ts","../../@interactjs/auto-start/hold.ts","../../@interactjs/auto-start/plugin.ts","../../@interactjs/core/interactablePreventDefault.ts","../../@interactjs/utils/isNonNativeEvent.ts","../../@interactjs/utils/clone.ts","../../@interactjs/modifiers/Modification.ts","../../@interactjs/modifiers/base.ts","../../@interactjs/core/options.ts","../../@interactjs/core/InteractEvent.ts","../../@interactjs/core/PointerInfo.ts","../../@interactjs/core/Interaction.ts","../../@interactjs/offset/plugin.ts","../../@interactjs/inertia/plugin.ts","../../@interactjs/core/Eventable.ts","../../@interactjs/core/events.ts","../../@interactjs/core/interactionFinder.ts","../../@interactjs/core/interactions.ts","../../@interactjs/core/Interactable.ts","../../@interactjs/core/InteractableSet.ts","../../@interactjs/core/scope.ts","../../@interactjs/interact/index.ts","../../@interactjs/core/InteractStatic.ts","../../@interactjs/snappers/edgeTarget.ts","../../@interactjs/snappers/elements.ts","../../@interactjs/snappers/grid.ts","../../@interactjs/snappers/plugin.ts","../../@interactjs/modifiers/aspectRatio.ts","../../@interactjs/modifiers/noop.ts","../../@interactjs/modifiers/restrict/pointer.ts","../../@interactjs/modifiers/restrict/edges.ts","../../@interactjs/modifiers/restrict/rect.ts","../../@interactjs/modifiers/restrict/size.ts","../../@interactjs/modifiers/snap/pointer.ts","../../@interactjs/modifiers/snap/size.ts","../../@interactjs/modifiers/all.ts","../../@interactjs/modifiers/snap/edges.ts","../../@interactjs/modifiers/plugin.ts","../../@interactjs/pointer-events/PointerEvent.ts","../../@interactjs/pointer-events/base.ts","../../@interactjs/pointer-events/holdRepeat.ts","../../@interactjs/pointer-events/interactableTargets.ts","../../@interactjs/pointer-events/plugin.ts","../../@interactjs/reflow/plugin.ts","../../@interactjs/interactjs/index.ts","index.js"],"names":["interact","isWindow","thing","Window","realWindow","undefined","win","init","window","el","document","createTextNode","ownerDocument","wrap","getWindow","node","defaultView","object","_typeof","func","is","docFrag","nodeType","number","bool","string","element","_window","test","Element","nodeName","plainObject","constructor","toString","array","length","splice","beforeMove","_ref","interaction","prepared","name","axis","coords","cur","page","y","start","client","velocity","x","move","_ref2","iEvent","opposite","delta","drag","id","install","scope","actions","Interactable","defaults","prototype","draggable","map","methodDict","listeners","arg","interactable","buttons","dragOptions","options","enabled","pointerIsDown","pointerType","mouseButtons","action","lockAxis","startAxis","this","setPerAction","setOnEvents","getCursor","filterEventType","type","search","drag$1","domObjects","DocumentFragment","blank","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","PointerEvent","MSPointerEvent","domObjects$1","browser","navigator","supportsTouch","DocumentTouch","supportsPointerEvent","pointerEnabled","isIOS","platform","isIOS7","appVersion","isIe9","userAgent","isOperaMobile","appName","prefixedMatchesSelector","pEventTypes","up","down","over","out","cancel","wheelEvent","browser$1","nodeContains","parent","child","contains","parentNode","closest","selector","matchesSelector","host","replace","getParent","getNodeParents","limit","parentParent","parents","unshift","matchesUpTo","getActualElement","correspondingUseElement","getElementClientRect","clientRect","getBoundingClientRect","getClientRects","left","right","top","bottom","width","height","getElementRect","relevantWindow","scroll","scrollX","documentElement","scrollLeft","scrollY","scrollTop","getPath","path","push","trySelector","value","querySelector","extend","dest","source","prop","getStringOptionResult","target","getRect","resolveRectLike","functionArgs","returnValue","apply","rectToXY","rect","tlbrToXywh","addEdges","edges","getOriginXY","actionName","actionOptions","origin","normalize","filter","arguments","_typeOrPrefix","result","split","forEach","t","_i2","_listeners2","l","prefix","p","concat","trim","hypot","Math","sqrt","VENDOR_PREFIXES","pointerExtend","__set","_loop","some","indexOf","Object","defineProperty","get","set","configurable","copyCoords","src","timeStamp","setZeroCoords","targetObj","isNativePointer","pointer","dom","getXY","xy","getPageXY","getPointerId","pointerId","identifier","getTouchPair","event","touches","changedTouches","pointerAverage","pointers","average","pageX","pageY","clientX","clientY","screenX","screenY","touchBBox","minX","min","minY","maxX","max","maxY","touchDistance","deltaSource","sourceX","sourceY","dx","dy","touchAngle","atan2","PI","getPointerType","getEventTargets","composedPath","domUtils","currentTarget","BaseEvent","_classCallCheck","immediatePropagationStopped","propagationStopped","_interaction","_createClass","key","_proxy","merge","item","from","findIndex","i","find","DropEvent","_BaseEvent","_inherits","_super","_createSuper","dropState","dragEvent","_this","call","dropzone","relatedTarget","prev","_this2","rejected","events","enter","stopImmediatePropagation","activeDrops","index","arr","deactivateEvent","fire","fireActivationEvents","_i6","_activeDrops$slice2","slice","_activeDrops$slice2$_","getActiveDrops","dragElement","draggableElement","drops","_interactables$list2","interactables","list","drop","accept","_i4","_dropzone$getAllEleme2","getAllElements","dropzoneElement","_i8","activeDrop","getDrop","pointerEvent","validDrops","_i10","_dropState$activeDrop2","_dropState$activeDrop3","isValid","dropCheck","dropIndex","elements","deepestNodeIndex","higherNode","lowerNode","deepestNodeParents","currentNode","deepestNode","currentNodeParent","deepestNodeParent","ancestryStart","ownerSVGElement","currentNodeParents","commonIndex","lastChild","previousSibling","parseInt","getComputedStyle","zIndex","getDropEvents","_pointerEvent","dropEvents","leave","activate","deactivate","dragLeave","prevDropzone","dragEnter","fireDropEvents","onEventCreated","_ref3","dynamicDrop","dropResult","interactStatic","usePlugin","normalized","normalizeListeners","corrected","keys","reduce","acc","prevListeners","off","on","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","overlap","checker","dropElement","dropped","dropOverlap","pointerUtils","horizontal","vertical","dragRect","cx","cy","newValue","phaselessTypes","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","_ref4","_ref5","_ref6","_ref7","drop$1","updateGestureProps","phase","starting","ending","distance","box","scale","ds","angle","da","gesture","startDistance","startAngle","prevEvent","Infinity","isNaN","before","gesturable","gestureOptions","gesture$1","checkResizeEdge","interactableElement","margin","abs","edge","updateEventAxes","resizeAxes","resizeEvent","resize","square","axes","request","cursors","topleft","bottomright","topright","bottomleft","defaultMargin","resizable","preserveAspectRatio","_rects","previous","deltaRect","invert","invertible","current","_interaction$_rects","startRect","swap","resizeOptions","resizeEdges","_latestPointer","eventTarget","NaN","cursorKey","_ref8","resize$1","lastTime","raf","callback","token","global","requestAnimationFrame","cancelAnimationFrame","vendors","vendor","bind","currTime","Date","now","timeToCall","setTimeout","clearTimeout","autoScroll","container","speed","isScrolling","prevTime","stop","getContainer","dt","s","scrollBy","prevScroll","getScroll","curScroll","check","_options$actionName$a","onInteractionMove","interacting","simulation","innerWidth","innerHeight","body","autoScroll$1","autoscroll","perAction","warnOnce","method","message","warned","console","warn","copyAction","styleCursor","actionChecker","InteractableMethods","getAction","button","ignoreFrom","_backCompatOption","allowFrom","validateAction","testIgnoreAllow","withinInteractionLimit","validateMatches","matches","matchElements","len","match","matchElement","matchAction","getActionInfo","pushMatches","forEachMatch","actionInfo","manualStart","prepare","setInteractionCursor","maxActions","maxPerElement","autoStartMax","autoStart","maxInteractions","activeInteractions","interactableCount","elementCount","_scope$interactions$l2","interactions","otherAction","setCursor","cursor","prevCursorElement","cursorElement","style","cursorChecker","_interacting","autoStart$2","base","pointerWasMoved","dragAxis","absX","absY","targetOptions","currentAxis","getDraggable","downPointer","downEvent","thisAxis","getHoldDuration","hold","delay","hold$1","basePlugin","autoStartHoldTimer","duplicate","preventDefault","onInteractionEvent","checkAndPreventDefault","interactablePreventDefault","setting","supportsPassive","doc","docOptions","getDocOptions","passive","docEvents","listener","eventType","isNonNativeEvent","substr","phases","clone","Modification","states","startOffset","startDelta","endResult","startEdges","createResult","pageCoords","modifierList","actionModifiers","modifiers","methods","_methods","m","prepareStates","fillArg","preEnd","startAll","setAll","_this$states2","state","skipModifiers","unmodifiedRect","unmodifiedEdges","newResult","_state$methods","lastModifierCoords","shouldDo","rectUtils","eventProps","rectDelta","prevCoords","prevRect","rectChanged","changed","curCoords","startCoords","curDelta","_ref3$_i","coordsSet","modifiedCoords","adjustment","applyToInteraction","doPreend","endPosition","beforeEnd","modifierArg","_this$states4","_modifierList$index","_ref4$interaction","modification","_modification$result","_i12","_ref6$_i","requireEndOnly","endOnly","setStart","other","makeModifier","module","modifier","_options","enable","disable","_defaults","addEventModifiers","ret","setAndApply","restoreInteractionCoords","InteractEvent","ctrlKey","shiftKey","altKey","metaKey","x0","y0","t0","duration","clientX0","clientY0","swipe","_assertThisInitialized","downTime","getSwipe","velocityY","velocityX","defineProperties","PointerInfo","downTarget","_ProxyValues","_ProxyMethods","idCounter","Interaction","scopeFire","_scopeFire","_ending","_stopped","doMove","signalArg","_id","that","_loop2","_key","pointerIndex","updatePointer","pointerInfo","_doPhase","duplicateMove","pointerMoveTolerance","getPointerIndex","curEventTarget","end","removePointer","endPhaseResult","curPointer","_now","_updateLatestPointer","_this$interactable","_createPreparedEvent","_fireEvent","beforeAction","applyPending","offset","pending","addToCoords","offsetBy","total","offset$1","InertiaState","active","isModified","smoothEnd","allowResume","modifierCount","v0","te","targetOffset","modifiedOffset","currentOffset","lambda_v0","one_ve_v0","timeout","getOptions","velocityClient","pointerSpeed","copyFrom","minSpeed","endSpeed","startInertia","startSmoothEnd","startVelocity","lambda","resistance","inertiaDur","log","onNextFrame","inertiaTick","smoothEndTick","tickFn","_this3","cpX","cpY","endX","endY","position","_this4","newOffset","progress","exp","_getQBezierValue","_this5","smoothEndDuration","easeOutQuad","inertia","p1","p2","p3","iT","b","c","d","inertia$1","inertiastart","resume","fireUntilImmediateStopped","Eventable","types","eventList","_listeners$type2","subListener","_element","FakeEvent","originalEvent","pExtend","stopPropagation","param","capture","optionsMatch","a","_scope$document","targets","delegatedEvents","documents","eventsMethods","add","remove","addDelegate","context","optionalArg","_i3","delegateListener","delegateUseCapture","delegates","delegate","removeDelegate","matchFound","entry","supportsOptions","addEventListener","removeEventListener","targetIndex","typeIsEmpty","typeListeners","hasOwnProperty","fakeEvent","_i5","createElement","finder","methodOrder","details","_finder$methodOrder2","simulationResume","mouseOrPen","firstNonActive","_scope$interactions$l4","hasPointerId","_scope$interactions$l6","hasPointer","_scope$interactions$l8","idle","_scope$interactions$l10","finder$1","methodNames","doOnInteractions","_pointerUtils$getEven","prevTouchTime","_event$changedTouches2","changedTouch","searchDetails","getInteraction","invalidPointer","_matches$_i","new","onDocSignal","eventMethodName","eventMethod","eventOptions","_i14","_docEvents$_i","interactions$1","releasePointersOnRemovedEls","_interaction$pointers2","pointerDown","pointerMove","pointerUp","documentBlur","_InteractionBase","_class","InteractionBase","destroy","OnOffMethod","defaultContext","scopeEvents","_actions","_context","_win","_doc","_scopeEvents","onstart","onmove","onend","oninertiastart","_this$_actions$map$ac","actionFilter","_onOff","Off","On","optionName_","optionName","optionValue","updatePerActionListeners","Array","querySelectorAll","targetNode","testIgnore","testAllow","typeArg","listenerArg","_listeners$_type2","actionName_","methodName","rectChecker","delegated","_delegated$i","InteractableSet","selectorMap","addListeners","interactablesOnTarget","addDocument","isSelector","inContext","_this$list2","pluginIdRoot","Scope","floor","random","isInitialized","listenerMaps","getExisting","globalEvents","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","version","process","use","plugin","isSet","_type2","debug","_this$scope$interacti2","removeDocument","_plugins","onWindowUnload","_InteractableBase","_class2","InteractableBase","_get","_getPrototypeOf","_this$listenerMaps2","pluginIsInstalled","otherId","getDocIndex","docIndex","interact$1","_global","globalThis","grid","coordFields","xField","yField","gridFunc","range","_grid$limits","limits","_grid$offset","_coordFields$_i","gridx","round","gridy","snappers","allSnappers","createSnapGrid","setEqualDelta","xIsPrimaryAxis","edgeSign","setRatio","ratio","newHeight","newWidth","aspectRatio$1","_state$options","_state$options2","equalDelta","linkedEdges","sign","subModification","_objectSpread","initialCoords","aspectMethod","correctedRect","noop","rubberband","getRestrictionRect","restrict","elementRect","restriction","widthDiff","heightDiff","restrict$1","noInner","noOuter","fixRect","restrictEdges","inner","outer","restrictEdges$1","_","restrictRect$1","noMin","noMax","restrictSize$1","minSize","maxSize","snap","snapOffset","offsetWithOrigin","offsetRect","relativePoints","offsets","relativePoint","relativeX","relativeY","snapTarget","inRange","snap$1","snapSize","targetFields","relative","_state$targetFields2","_state$targetFields2$","snapSize$1","all","aspectRatio","restrictRect","restrictSize","snapEdges","spring","avoid","transform","modifiers$1","_all","interval","tapTime","double","prevTap","originX","originY","pointerEvents","clearHold","timer","minDuration","_signalArg$targets2","holdDuration","eventable","collectEventTargets","tap","doubletap","_arg$targets","props","_subtractOrigin","_addOrigin","_interaction$pointers","endHoldRepeat","holdIntervalHandle","clearInterval","holdRepeat$1","holdRepeatInterval","holdrepeat","enderTypes","count","interactableTargets","__backCompatOption","holdRepeat","reflow$1","reflow","Promise","promises","reflowPromise","runningInteraction","_reflowPromise","resolve","_reflowResolve","xywh","then","default","exports","_unused","_interactjs","_interopRequireDefault","require","obj","__esModule","dragMoveListener","parseFloat","getAttribute","setAttribute","classList","appendChild","moduloId","profesorId"],"mappings":"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","file":"src.b2568825.js","sourceRoot":"../src","sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init(window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow(node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n","import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank() {}\n\nexport default domObjects\n\nfunction init(window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n","import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init(window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n          up: 'MSPointerUp',\n          down: 'MSPointerDown',\n          over: 'mouseover',\n          out: 'mouseout',\n          move: 'MSPointerMove',\n          cancel: 'MSPointerCancel',\n        }\n      : {\n          up: 'pointerup',\n          down: 'pointerdown',\n          over: 'pointerover',\n          out: 'pointerout',\n          move: 'pointermove',\n          cancel: 'pointercancel',\n        }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object>(dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult(value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]>(\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function toFullRect(rect: Rect): FullRect {\n  const { top, left, bottom, right } = rect\n  const width = rect.width ?? rect.right - rect.left\n  const height = rect.height ?? rect.bottom - rect.top\n\n  return { top, left, bottom, right, width, height }\n}\n\nexport function rectToXY(rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>>(rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh(rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges(edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function getOriginXY(\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = actionName && (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n","const VENDOR_PREFIXES = ['webkit', 'moz']\n\nexport default function pointerExtend<T>(dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    // skip deprecated prefixed properties\n    if (VENDOR_PREFIXES.some((prefix) => prop.indexOf(prefix) === 0)) continue\n\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get() {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set(value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  /** @internal */\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor(interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName | null = never> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get(this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set(this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>): T | undefined => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor(dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject() {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault() {}\n\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Rect, PointerType, ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable(options: Partial<OrBoolean<GesturableOptions>> | boolean): this\n    gesturable(): GesturableOptions\n    /**\n     * ```js\n     * interact(element).gesturable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // limit multiple gestures.\n     *     // See the explanation in {@link Interactable.draggable} example\n     *     max: Infinity,\n     *     maxPerElement: 1,\n     * })\n     *\n     * var isGestureable = interact(element).gesturable()\n     * ```\n     *\n     * Gets or sets whether multitouch gestures can be performed on the target\n     *\n     * @param options - true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n     * @returns A boolean indicating if this can be the target of gesture events, or this Interactable\n     */\n    gesturable(options?: Partial<OrBoolean<GesturableOptions>> | boolean): this | GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as Interactable['gesturable']\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending || interaction.pointers.length < 2) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor() {\n    return ''\n  },\n\n  filterEventType: (type: string) => type.search('gesture') === 0,\n}\n\nexport default gesture\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init(global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './drag/plugin'\nimport './drop/plugin'\nimport './gesture/plugin'\nimport './resize/plugin'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'actions',\n  install(scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T>(this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName>(dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    /**\n     * Returns or sets whether the the cursor should be changed depending on the\n     * action that would be performed if the mouse were pressed and dragged.\n     *\n     * @param {boolean} [newValue]\n     * @return {boolean | Interactable} The current setting or this Interactable\n     */\n    styleCursor(newValue?: boolean): boolean | this\n    actionChecker(checker: Function): Interactable\n    actionChecker(): Function\n    /**\n     * ```js\n     * interact('.resize-drag')\n     *   .resizable(true)\n     *   .draggable(true)\n     *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n     *\n     *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n     *       // force drag with handle target\n     *       action.name = drag\n     *     }\n     *     else {\n     *       // resize from the top and right edges\n     *       action.name  = 'resize'\n     *       action.edges = { top: true, right: true }\n     *     }\n     *\n     *     return action\n     * })\n     * ```\n     *\n     * Returns or sets the function used to check action to be performed on\n     * pointerDown\n     *\n     * @param checker - A function which takes a pointer event,\n     * defaultAction string, interactable, element and interaction as parameters\n     * and returns an object with name property 'drag' 'resize' or 'gesture' and\n     * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n     * props.\n     * @returns The checker function or this Interactable\n     */\n    actionChecker(checker?: Function): Interactable | Function\n    /** @returns This interactable */\n    ignoreFrom(newValue: string | Element | null): Interactable\n    /** @returns The current ignoreFrom value */\n    ignoreFrom(): string | Element | null\n    /**\n     * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n     * of it's parents match the given CSS selector or Element, no\n     * drag/resize/gesture is started.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `ignoreFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .draggable({\n     *     ignoreFrom: 'input, textarea, a[href]'',\n     *   })\n     *   .pointerEvents({\n     *     ignoreFrom: '[no-pointer]',\n     *   })\n     * ```\n     * Interactable\n     */\n    ignoreFrom(\n      /** a CSS selector string, an Element or `null` to not ignore any elements */\n      newValue?: string | Element | null,\n    ): Interactable | string | Element | null\n    allowFrom(): boolean\n    /**\n     *\n     * A drag/resize/gesture is started only If the target of the `mousedown`,\n     * `pointerdown` or `touchstart` event or any of it's parents match the given\n     * CSS selector or Element.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `allowFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .resizable({\n     *     allowFrom: '.resize-handle',\n     *   .pointerEvents({\n     *     allowFrom: '.handle',,\n     *   })\n     * ```\n     *\n     * @param {string | Element | null} [newValue]\n     * @return {string | Element | object} The current allowFrom value or this\n     * Interactable\n     */\n    allowFrom(\n      /** A CSS selector string, an Element or `null` to allow from any element */\n      newValue: string | Element | null,\n    ): Interactable\n  }\n}\n\nfunction install(scope: Scope) {\n  const {\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction(\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  Interactable.prototype.actionChecker = actionChecker\n\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker(\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker(this: Interactable, checker?: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './InteractableMethods'\nimport InteractableMethods from './InteractableMethods'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    /**\n     * Returns or sets the maximum number of concurrent interactions allowed.  By\n     * default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables and\n     * elements, you need to enable it in the draggable, resizable and gesturable\n     * `'max'` and `'maxPerElement'` options.\n     *\n     * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n     */\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install(scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName>(\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches(interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare(\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName>(\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions(newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor(element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName>(interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis(startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable */\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration(interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n","import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './dragAxis'\nimport './hold'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'auto-start',\n  install(scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault(newValue: PreventDefaultValue): this\n    preventDefault(): PreventDefaultValue\n    /**\n     * Returns or sets whether to prevent the browser's default behaviour in\n     * response to pointer events. Can be set to:\n     *  - `'always'` to always prevent\n     *  - `'never'` to never prevent\n     *  - `'auto'` to let interact.js try to determine what would be best\n     *\n     * @param newValue - `'always'`, `'never'` or `'auto'`\n     * @returns The current setting or this Interactable\n     */\n    preventDefault(newValue?: PreventDefaultValue): PreventDefaultValue | this\n    checkAndPreventDefault(event: Event): void\n  }\n}\n\nconst preventDefault = function preventDefault(this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n} as Interactable['preventDefault']\n\nfunction checkAndPreventDefault(interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent({ interaction, event }: { interaction: Interaction; event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent(type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object>(source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import type { Point, Listeners, OrBoolean, Element, Rect } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'always' | 'never' | 'auto'\n  deltaSource?: 'page' | 'client'\n  context?: Node\n  getRect?: (element: Element) => Rect\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\n  Partial<PerActionDefaults> & {\n    [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n  }\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport type { Point, FullRect, PointerEventType, Element, ActionName } from '@interactjs/core/types'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  /** @internal */\n  preEnd?: boolean\n\n  constructor(\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe() {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get() {\n      return this.page.x\n    },\n    set(value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get() {\n      return this.page.y\n    },\n    set(value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get() {\n      return this.client.x\n    },\n    set(value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get() {\n      return this.client.y\n    },\n    set(value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get() {\n      return this.delta.x\n    },\n    set(value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get() {\n      return this.delta.y\n    },\n    set(value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get() {\n      return this.velocity.x\n    },\n    set(value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get() {\n      return this.velocity.y\n    },\n    set(value) {\n      this.velocity.y = value\n    },\n  },\n})\n","import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor(id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { ActionDefaults } from './options'\nimport { PointerInfo } from './PointerInfo'\nimport type { Scope } from './scope'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>; event: Event; type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\n  Interaction<T>,\n  Exclude<keyof typeof _ProxyValues | keyof typeof _ProxyMethods, '_proxy'>\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  /** current interactable being interacted with */\n  interactable: Interactable | null = null\n\n  /** the target element of the interactable */\n  element: Element | null = null\n  rect: FullRect | null = null\n  /** @internal */\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  /** @internal */\n  edges: EdgeOptions | null = null\n\n  /** @internal */\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  /** @internal keep track of added pointers */\n  pointers: PointerInfo[] = []\n\n  /** @internal pointerdown/mousedown/touchstart event */\n  downEvent: PointerEventType | null = null\n\n  /** @internal */ downPointer: PointerType = {} as PointerType\n\n  /** @internal */\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  /** @internal */ prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  /** @internal */ _interacting = false\n  /** @internal */ _ending = false\n  /** @internal */ _stopped = true\n  /** @internal */ _proxy: InteractionProxy<T>\n\n  /** @internal */ simulation = null\n\n  /** @internal */ get pointerMoveTolerance() {\n    return 1\n  }\n\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  /** @internal */ readonly _id: number = idCounter++\n\n  constructor({ pointerType, scopeFire }: { pointerType?: string; scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get() {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param action - The action to be performed - drag, resize, etc.\n   * @param target - The Interactable to target\n   * @param element - The DOM Element to target\n   * @returns Whether the interaction was successfully started\n   */\n  start<A extends ActionName>(action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move(signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  /**\n   * @internal\n   * End interact move events and stop auto-scroll unless simulation is running\n   */\n  pointerUp(pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  /** @internal */\n  documentBlur(event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   */\n  end(event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction() {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting() {\n    return this._interacting\n  }\n\n  stop() {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  /** @internal */\n  getPointerIndex(pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  /** @internal */\n  getPointerInfo(pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  /** @internal */\n  updatePointer(pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  /** @internal */\n  removePointer(pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  /** @internal */\n  _updateLatestPointer(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy() {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  /** @internal */\n  _createPreparedEvent<P extends EventPhase>(\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  /** @internal */\n  _fireEvent<P extends EventPhase>(iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  /** @internal */\n  _doPhase<P extends EventPhase>(\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  /** @internal */\n  _now() {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal(interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending(interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy(this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending(interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install(scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nimport type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\n\nfunction fireUntilImmediateStopped(event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor(options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string; propagationStopped?: boolean }>(event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect(_element: Element): Rect {\n    return null\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\n\nimport type { NativeEventTarget } from './NativeTypes'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ninterface EventOptions {\n  capture: boolean\n  passive: boolean\n}\n\ntype PartialEventTarget = Partial<NativeEventTarget>\n\ntype ListenerEntry = { func: (event: Event | FakeEvent) => any; options: EventOptions }\n\nfunction install(scope: Scope) {\n  const targets: Array<{\n    eventTarget: PartialEventTarget\n    events: { [type: string]: ListenerEntry[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: ListenerEntry[]\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture() {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive() {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener) return\n\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (!arr.find(target.events[type], (l) => l.func === listener && optionsMatch(l.options, options))) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push({ func: listener, options })\n    }\n  }\n\n  function remove(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener?: 'all' | ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener || !eventTarget.removeEventListener) return\n\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          const entry = typeListeners[i]\n          remove(eventTarget, type, entry.func, entry.options)\n        }\n        return\n      } else {\n        const options = getOptions(optionalArg)\n\n        for (let i = 0; i < typeListeners.length; i++) {\n          const entry = typeListeners[i]\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate(\n    selector: string,\n    context: Node,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push({ func: listener, options })\n  }\n\n  function removeDelegate(\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const entry = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener(event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const entry of listeners) {\n            if (optionsMatch(entry.options, options)) {\n              entry.func(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture(this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor(originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault() {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation() {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation() {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions(param: { [index: string]: any } | boolean): { capture: boolean; passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  return {\n    capture: !!param.capture,\n    passive: !!param.passive,\n  }\n}\n\nfunction optionsMatch(a: Partial<EventOptions> | boolean, b: Partial<EventOptions>) {\n  if (a === b) return true\n\n  if (typeof a === 'boolean') return !!b.capture === a && !!b.passive === false\n\n  return !!a.capture === !!b.capture && !!a.passive === !!b.passive\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","import * as dom from '@interactjs/utils/domUtils'\n\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search(details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId(interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","/* eslint-disable no-dupe-class-members */\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\n\nimport { Eventable } from './Eventable'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\nconst enum OnOffMethod {\n  On,\n  Off,\n}\n\n/**\n * ```ts\n * const interactable = interact('.cards')\n *   .draggable({\n *     listeners: { move: event => console.log(event.type, event.pageX, event.pageY) }\n *   })\n *   .resizable({\n *     listeners: { move: event => console.log(event.rect) },\n *     modifiers: [interact.modifiers.restrictEdges({ outer: 'parent' })]\n *   })\n * ```\n */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults(): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly target: Target\n  /** @internal */ readonly options!: Required<Options>\n  /** @internal */ readonly _actions: Actions\n  /** @internal */ readonly events = new Eventable()\n  /** @internal */ readonly _context: Context\n  /** @internal */ readonly _win: Window\n  /** @internal */ readonly _doc: Document\n  /** @internal */ readonly _scopeEvents: Scope['events']\n\n  constructor(\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents(actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners(actionName: ActionName, prev: Listeners | undefined, cur: Listeners | undefined) {\n    const actionFilter = (this._actions.map[actionName] as { filterEventType?: (type: string) => boolean })\n      ?.filterEventType\n    const filter = (type: string) =>\n      (actionFilter == null || actionFilter(type)) && isNonNativeEvent(type, this._actions)\n\n    if (is.array(prev) || is.object(prev)) {\n      this._onOff(OnOffMethod.Off, actionName, prev, undefined, filter)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this._onOff(OnOffMethod.On, actionName, cur, undefined, filter)\n    }\n  }\n\n  setPerAction(actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect(element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker(checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = (element) => {\n        const rect = extend({}, checker.apply(this, element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete (this as Partial<typeof this>).getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  /** @internal */\n  _backCompatOption(optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin(newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource(newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /** @internal */\n  getAllElements(): Element[] {\n    const { target } = this\n\n    if (is.string(target)) {\n      return Array.from(this._context.querySelectorAll(target))\n    }\n\n    if (is.func(target) && (target as any).getAllElements) {\n      return (target as any).getAllElements()\n    }\n\n    return is.element(target) ? [target] : []\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context() {\n    return this._context\n  }\n\n  inContext(element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  /** @internal */\n  testIgnoreAllow(\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue; allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  /** @internal */\n  testAllow(this: Interactable, allowFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  /** @internal */\n  testIgnore(this: Interactable, ignoreFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }>(iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  /** @internal */\n  _onOff(\n    method: OnOffMethod,\n    typeArg: EventTypes,\n    listenerArg?: ListenersArg | null,\n    options?: any,\n    filter?: (type: string) => boolean,\n  ) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const listeners = normalizeListeners(typeArg, listenerArg, filter)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method === OnOffMethod.On ? 'on' : 'off'](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[method === OnOffMethod.On ? 'addDelegate' : 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[method === OnOffMethod.On ? 'add' : 'remove'](\n            this.target,\n            type,\n            listener,\n            options,\n          )\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on(types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.On, types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off(types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.Off, types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set(options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (setting === 'getRect') {\n        this.rectChecker(options.getRect)\n        continue\n      }\n\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset() {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target, 'all')\n    }\n  }\n}\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n// Keep Scope class internal, but expose minimal interface to avoid broken types when Scope is stripped out\nexport interface Scope {\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n","import browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport interface InteractStatic {\n  (target: Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Scope\n  /**\n   * Use a plugin\n   */\n  use(\n    plugin: Plugin,\n    options?: {\n      [key: string]: any\n    },\n  ): any\n  /**\n   * Check if an element or selector has been set with the `interact(target)`\n   * function\n   *\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  isSet(\n    /* The Element or string being searched for */\n    target: Target,\n    options?: any,\n  ): boolean\n  on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n  off(type: EventTypes, listener: any, options?: object): any\n  debug(): any\n  /**\n   * Whether or not the browser supports touch input\n   */\n  supportsTouch(): boolean\n  /**\n   * Whether or not the browser supports PointerEvents\n   */\n  supportsPointerEvent(): boolean\n  /**\n   * Cancels all interactions (end events are not fired)\n   */\n  stop(): InteractStatic\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   */\n  pointerMoveTolerance(\n    /** The movement from the start position must be greater than this value */\n    newValue?: number,\n  ): InteractStatic | number\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic(scope: Scope): InteractStatic {\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  interact.on = warnOnce(function on(type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  interact.off = warnOnce(function off(type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n","export default () => {}\n","export default () => {}\n","import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport interface GridOptionsBase {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\nexport interface GridOptionsXY extends GridOptionsBase {\n  x: number\n  y: number\n}\nexport interface GridOptionsTopLeft extends GridOptionsBase {\n  top?: number\n  left?: number\n}\nexport interface GridOptionsBottomRight extends GridOptionsBase {\n  bottom?: number\n  right?: number\n}\nexport interface GridOptionsWidthHeight extends GridOptionsBase {\n  width?: number\n  height?: number\n}\n\nexport type GridOptions = GridOptionsXY | GridOptionsTopLeft | GridOptionsBottomRight | GridOptionsWidthHeight\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect() {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect(_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This modifier allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set(arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This modifier allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: undefined,\n    range: undefined,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './all'\nimport './base'\n\nimport all from './all'\nimport base from './base'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  constructor(\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault() {\n    this.originalEvent.preventDefault()\n  }\n}\n","import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string>(\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n          {\n            interaction,\n            pointer,\n            event,\n            eventTarget,\n            type: 'doubletap',\n          },\n          scope,\n        )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string>(\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) =>\n        target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold?.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold(\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold!\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable import/no-duplicates */\nimport { type PointerEvent } from './PointerEvent'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired(\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\nimport type { PointerEventOptions } from '@interactjs/pointer-events/base'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents(options: Partial<PointerEventOptions>): this\n    /** @internal */\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = function (\n    this: Interactable,\n    options: Partial<PointerEventOptions>,\n  ) {\n    extend(this.events.options, options)\n\n    return this\n  }\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import type { Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './holdRepeat'\nimport './interactableTargets'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n/* eslint-enable import/no-duplicates */\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install(scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     * ```js\n     * const interactable = interact(target)\n     * const drag = { name: drag, axis: 'x' }\n     * const resize = { name: resize, edges: { left: true, bottom: true }\n     *\n     * interactable.reflow(drag)\n     * interactable.reflow(resize)\n     * ```\n     *\n     * Start an action sequence to re-apply modifiers, check drops, etc.\n     *\n     * @param { Object } action The action to begin\n     * @param { string } action.name The name of the action\n     * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n     */\n    reflow<T extends ActionName>(action: ActionProps<T>): ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  scope.actions.phases.reflow = true\n\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName>(\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = interactable.getAllElements()\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName>(\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n        interaction._reflowResolve = resolve\n      })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n","/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/actions/plugin'\nimport '@interactjs/auto-scroll/plugin'\nimport '@interactjs/auto-start/plugin'\nimport '@interactjs/core/interactablePreventDefault'\nimport '@interactjs/dev-tools/plugin'\nimport '@interactjs/inertia/plugin'\nimport '@interactjs/interact'\nimport '@interactjs/modifiers/plugin'\nimport '@interactjs/offset/plugin'\nimport '@interactjs/pointer-events/plugin'\nimport '@interactjs/reflow/plugin'\n\nimport actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n/* eslint-enable import/no-duplicates */\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n;(interact as any).default = interact\n","import interact from 'interactjs';\r\n\r\n// Función para iniciar el arrastre\r\nfunction dragMoveListener(event) {\r\n    var target = event.target;\r\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\r\n    var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\r\n    target.setAttribute('data-x', x);\r\n    target.setAttribute('data-y', y);\r\n}\r\n\r\n// Habilita el arrastre de los módulos\r\ninteract('.modulo').draggable({\r\n    inertia: true,\r\n    modifiers: [\r\n        interact.modifiers.restrictRect({\r\n            restriction: 'parent',\r\n            endOnly: true\r\n        })\r\n    ],\r\n    autoScroll: true,\r\n    listeners: { move: dragMoveListener }\r\n});\r\n\r\n// Habilita el soltar de los módulos en los contenedores de profesores\r\ninteract('.profesor .dropzone').dropzone({\r\n    accept: '.modulo',\r\n    overlap: 0.75,\r\n\r\n    ondropactivate: function (event) {\r\n        event.target.classList.add('drop-active');\r\n    },\r\n    ondropdeactivate: function (event) {\r\n        event.target.classList.remove('drop-active');\r\n    },\r\n    ondragenter: function (event) {\r\n        var draggableElement = event.relatedTarget;\r\n        var dropzoneElement = event.target;\r\n\r\n        dropzoneElement.classList.add('drop-target');\r\n        draggableElement.classList.add('can-drop');\r\n    },\r\n    ondragleave: function (event) {\r\n        event.target.classList.remove('drop-target');\r\n        event.relatedTarget.classList.remove('can-drop');\r\n    },\r\n    ondrop: function (event) {\r\n        var draggableElement = event.relatedTarget;\r\n        var dropzoneElement = event.target;\r\n\r\n        dropzoneElement.appendChild(draggableElement);\r\n\r\n        // Agrega una clase para indicar visualmente que el módulo fue soltado correctamente\r\n        draggableElement.classList.add('dropped');\r\n\r\n        // Elimina la clase después de un tiempo para volver al estado original\r\n        setTimeout(function() {\r\n            draggableElement.classList.remove('dropped');\r\n        }, 1000);\r\n\r\n        // Muestra un mensaje de confirmación\r\n        var moduloId = draggableElement.getAttribute('data-modulo');\r\n        var profesorId = dropzoneElement.closest('.profesor').getAttribute('id');\r\n        console.log(`Has añadido el módulo ${moduloId} al Profesor ${profesorId}`);\r\n    }\r\n});\r\n"]}